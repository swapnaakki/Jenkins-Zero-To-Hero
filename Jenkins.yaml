def sharedlibrary
try {
    sharedlibrary = scm.branches[0].name
    if (sharedlibrary.contains("*/")) {
        sharedlibrary = sharedlibrary.split("\\*/")[1]
    }
    else{
        sharedlibrary = "master"
        println("Unable to fetch scm branch,so using default branch i.e master")
}}
catch (e) {
    println("Error in fetching branch")
}

node {
  cleanWs()
  @Library("jenkins-library") _
  checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: "*/${sharedlibrary}"]], extensions: [[$class: 'CloneOption', honorRefspec: true, noTags: true, reference: '', shallow: true]], userRemoteConfigs: [[credentialsId: 'Jenkinscodemanager-bitbucket',refspec: "+refs/heads/${sharedlibrary}:refs/remotes/origin/${sharedlibrary}", url: ""]]]
  def url = "${WORKSPACE}"
  def urlsplitted = url.split('/')
  projectName = urlsplitted[urlsplitted.length - 3]
  environmentName = urlsplitted[urlsplitted.length - 2]
  projectName = "${projectName.toLowerCase()}"
  environmentName = "${environmentName.toLowerCase()}"
  sandbox="false"
  println(projectName)
  println(environmentName)
  toEnv+="${environmentName}"

pipeline {
    agent any

    stages {
        stage('Print Environment Variables') {
            steps {
                echo "Printing all environment variables:"
                // sh 'printenv'   // for Linux/Unix agents
                bat 'set' 
                // use this instead if your Jenkins runs on Windows
            }
        }
    }
}

